{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\harye\\\\Downloads\\\\Optics Problem Generator\\\\lens-app\\\\src\\\\components\\\\LensApp.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\n\n// Add a simple random number generator\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst mulberry32 = a => {\n  return () => {\n    let t = a += 0x6D2B79F5;\n    t = Math.imul(t ^ t >>> 15, t | 1);\n    t ^= t + Math.imul(t ^ t >>> 7, t | 61);\n    return ((t ^ t >>> 14) >>> 0) / 4294967296;\n  };\n};\n\n// Add the missing functions\nconst generateProblemType = rng => {\n  const types = [{\n    knowns: ['do', 'ho', 'di'],\n    unknowns: ['f', 'hi', 'm']\n  }, {\n    knowns: ['f', 'do', 'ho'],\n    unknowns: ['di', 'hi', 'm']\n  }, {\n    knowns: ['f', 'do', 'hi'],\n    unknowns: ['di', 'ho', 'm']\n  }, {\n    knowns: ['f', 'di', 'ho'],\n    unknowns: ['do', 'hi', 'm']\n  }, {\n    knowns: ['di', 'ho', 'm'],\n    unknowns: ['do', 'hi', 'f']\n  }, {\n    knowns: ['do', 'hi', 'm'],\n    unknowns: ['f', 'di', 'ho']\n  }];\n  return types[Math.floor(rng() * types.length)];\n};\nconst calculateSALT = (lensType, focalLength, objectDistance, imageDistance, imageHeight, objectHeight) => {\n  const f = Math.abs(focalLength);\n  const do_ = objectDistance;\n  const di = imageDistance;\n  const hi = imageHeight;\n  const ho = objectHeight;\n  let size, attitude, location, type;\n\n  // Size\n  size = Math.abs(hi) > Math.abs(ho) ? \"Larger\" : Math.abs(hi) < Math.abs(ho) ? \"Smaller\" : \"Same size\";\n\n  // Attitude\n  attitude = hi * ho > 0 ? \"Upright\" : \"Inverted\";\n\n  // Location and Type\n  if (lensType === \"converging\") {\n    if (do_ > 2 * f) {\n      location = \"Between f and 2f\";\n      type = \"Real\";\n    } else if (do_ === 2 * f) {\n      location = \"At 2f\";\n      type = \"Real\";\n    } else if (do_ < 2 * f && do_ > f) {\n      location = \"Beyond 2f\";\n      type = \"Real\";\n    } else if (do_ === f) {\n      location = \"No image formed\";\n      type = \"No image\";\n    } else if (do_ < f) {\n      location = \"Same side as object\";\n      type = \"Virtual\";\n    }\n  } else {\n    // diverging lens\n    location = \"Same side as object\";\n    type = \"Virtual\";\n  }\n  return {\n    size,\n    attitude,\n    location,\n    type\n  };\n};\nconst generateWordProblem = seed => {\n  const rng = mulberry32(seed);\n  const objects = [\"pencil\", \"flower\", \"toy car\", \"book\", \"candle\", \"tin can\", \"statue\"];\n  const scenarios = [\"In a physics lab, students are experimenting with a {lens_type} lens.\", \"An optometrist is demonstrating how a {lens_type} lens works in correcting vision.\", \"A photographer is using a {lens_type} lens to capture a unique perspective.\", \"At a science museum, visitors can interact with a large {lens_type} lens exhibit.\", \"During an optics lecture, a professor is explaining the properties of a {lens_type} lens.\", \"A jeweler is using a small {lens_type} lens to inspect the details of a gemstone.\", \"In a telescope, a {lens_type} lens is used to magnify distant objects.\", \"A student is learning about image formation using a {lens_type} lens in their physics class.\", \"At an optician's shop, different {lens_type} lenses are being demonstrated to a customer.\", \"In a microscope, a {lens_type} lens is used to magnify tiny specimens.\", \"A projector uses a {lens_type} lens to display images on a screen.\", \"In a camera, a {lens_type} lens is focusing light onto the image sensor.\", \"An artist is using a {lens_type} lens to create distorted images for a unique art piece.\", \"In a virtual reality headset, {lens_type} lenses are used to focus the display for the user's eyes.\"];\n  const lensType = rng() < 0.5 ? \"converging\" : \"diverging\";\n  const objectChoice = objects[Math.floor(rng() * objects.length)];\n  const scenario = scenarios[Math.floor(rng() * scenarios.length)].replace(\"{lens_type}\", lensType);\n  const isEasyProblem = rng() < 0.5;\n  let focalLength, objectDistance;\n  if (isEasyProblem) {\n    const denominators = [2, 3, 4, 5, 6, 8, 10, 12];\n    const firstDenominator = denominators[Math.floor(rng() * denominators.length)];\n    const secondDenominator = denominators[Math.floor(rng() * denominators.length)];\n    focalLength = lensType === \"diverging\" ? -firstDenominator : firstDenominator;\n    objectDistance = secondDenominator;\n  } else {\n    focalLength = lensType === \"diverging\" ? -(rng() * 45 + 5) : rng() * 45 + 5;\n    objectDistance = rng() * 90 + 10;\n    focalLength = Number(focalLength.toFixed(2));\n    objectDistance = Number(objectDistance.toFixed(2));\n  }\n\n  // Perform calculations with full precision\n  const imageDistance = 1 / (1 / focalLength - 1 / objectDistance);\n  const magnification = -imageDistance / objectDistance;\n  const objectHeight = Math.round(rng() * 9 + 1);\n  const imageHeight = objectHeight * magnification;\n  const problemType = generateProblemType(rng);\n  const problemInfoMap = {\n    lensType: `The lens is a ${lensType} lens.`,\n    f: `The focal length of the lens is ${Math.abs(focalLength)} cm.`,\n    do: `A ${objectChoice} is placed ${objectDistance} cm in front of the lens.`,\n    ho: `The ${objectChoice} is ${objectHeight} cm tall.`,\n    di: `An image is formed ${Math.abs(imageDistance.toFixed(2))} cm ${imageDistance > 0 ? 'behind' : 'in front of'} the lens.`,\n    hi: `The image is ${Math.abs(imageHeight.toFixed(2))} cm tall${imageHeight < 0 ? ' and inverted' : ''}.`,\n    m: `The magnification of the lens is ${Math.abs(magnification.toFixed(2))}${magnification < 0 ? ' (inverted)' : ''}.`\n  };\n  const detailedInfoMap = {\n    lensType: `Lens type: ${lensType}`,\n    do: `do = ${objectDistance} cm`,\n    f: `f = ${focalLength} cm`,\n    ho: `ho = ${objectHeight} cm`,\n    di: `di = ${imageDistance.toFixed(2)} cm`,\n    hi: `hi = ${imageHeight.toFixed(2)} cm`,\n    m: `m = ${magnification.toFixed(2)}`\n  };\n  const unknownFullWords = {\n    do: \"distance of object\",\n    f: \"focal length\",\n    ho: \"height of object\",\n    di: \"distance of image\",\n    hi: \"height of image\",\n    m: \"magnification\"\n  };\n  const formatUnknowns = unknowns => {\n    if (unknowns.length === 1) {\n      return unknownFullWords[unknowns[0]];\n    } else if (unknowns.length === 2) {\n      return `${unknownFullWords[unknowns[0]]} and ${unknownFullWords[unknowns[1]]}`;\n    } else {\n      const lastUnknown = unknownFullWords[unknowns[unknowns.length - 1]];\n      const otherUnknowns = unknowns.slice(0, -1).map(u => unknownFullWords[u]).join(\", \");\n      return `${otherUnknowns}, and ${lastUnknown}`;\n    }\n  };\n  let problemDescription = '';\n  let remainingKnowns = [...problemType.knowns];\n  let objectIntroduced = false;\n\n  // Function to add info to the problem description and remove from remainingKnowns\n  const addInfo = key => {\n    if (remainingKnowns.includes(key)) {\n      if (key === 'do') objectIntroduced = true;\n      problemDescription += problemInfoMap[key] + ' ';\n      remainingKnowns = remainingKnowns.filter(k => k !== key);\n      return true;\n    }\n    return false;\n  };\n\n  // Add scenario first\n  problemDescription = `${scenario} `;\n\n  // Add 'f' if it's present\n  addInfo('f');\n\n  // Add 'do' next, either after 'f' or first if 'f' is not present\n  addInfo('do');\n\n  // If object hasn't been introduced and we're about to mention its height, introduce it\n  if (!objectIntroduced && remainingKnowns.includes('ho')) {\n    problemDescription += `A ${objectChoice} is placed in front of the lens. `;\n    objectIntroduced = true;\n  }\n  addInfo('ho');\n  // Add the rest of the knowns\n  remainingKnowns.forEach(known => {\n    if (known !== 'lensType') {\n      // lensType is already included in the scenario\n      problemDescription += problemInfoMap[known] + ' ';\n    }\n  });\n\n  // If the object still hasn't been introduced, add it at the end\n  if (!objectIntroduced) {\n    problemDescription += `A ${objectChoice} is placed in front of the lens. `;\n  }\n  const unknownsText = formatUnknowns(problemType.unknowns);\n  const problem = `${problemDescription}Determine the ${unknownsText} for this lens system.`;\n  const givenInfo = ['lensType', ...problemType.knowns];\n  const equations = [\"1. Thin Lens equation: 1/f = 1/di + 1/do\", \"2. Magnification equation: m = hi/ho = -di/do\"];\n  const answers = {\n    f: `Focal length (f): ${focalLength.toFixed(2)} cm`,\n    do: `Object distance (do): ${objectDistance.toFixed(2)} cm`,\n    ho: `Object height (ho): ${objectHeight.toFixed(2)} cm`,\n    di: `Image distance (di): ${imageDistance.toFixed(2)} cm`,\n    hi: `Image height (hi): ${imageHeight.toFixed(2)} cm`,\n    m: `Magnification (m): ${magnification.toFixed(2)}`\n  };\n  const salt = calculateSALT(lensType, focalLength, objectDistance, imageDistance, imageHeight, objectHeight);\n  return {\n    problem,\n    givenInfo,\n    problemInfoMap,\n    detailedInfoMap,\n    equations,\n    problemType,\n    answers,\n    salt,\n    isEasyProblem\n  };\n};\nconst LensProblemGenerator = () => {\n  _s();\n  const [problem, setProblem] = useState(null);\n  const [showHelp, setShowHelp] = useState(false);\n  const [showAnswers, setShowAnswers] = useState(false);\n  const [showControls, setShowControls] = useState(false);\n  const [problemId, setProblemId] = useState(Math.floor(Math.random() * 1000000));\n  const [inputId, setInputId] = useState('');\n  const handleGenerateProblem = useCallback(() => {\n    setProblem(generateWordProblem(problemId));\n    setShowHelp(false);\n    setShowAnswers(false);\n  }, [problemId]);\n  useEffect(() => {\n    handleGenerateProblem();\n  }, [handleGenerateProblem]);\n  const handleRandomProblem = () => {\n    const newId = Math.floor(Math.random() * 1000000);\n    setProblemId(newId);\n    setInputId(newId.toString());\n  };\n  const handleGenerateWithId = () => {\n    const newId = parseInt(inputId);\n    if (!isNaN(newId)) {\n      setProblemId(newId);\n    }\n  };\n  const toggleHelp = () => setShowHelp(!showHelp);\n  const toggleAnswers = () => setShowAnswers(!showAnswers);\n  const toggleControls = () => setShowControls(!showControls);\n  if (!problem) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 269,\n    columnNumber: 24\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-8 max-w-3xl mx-auto bg-gray-50 min-h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-6\",\n      children: \"Lens Calculation Questions Practice\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded-lg shadow-md p-6 mb-6 relative\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleControls,\n        className: \"absolute top-2 right-2 text-blue-500 hover:text-blue-700\",\n        children: showControls ? 'Hide Controls' : 'Show Controls'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this), showControls && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-4 mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"problemId\",\n              className: \"block text-sm font-medium text-gray-700\",\n              children: \"Problem ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              id: \"problemId\",\n              value: inputId,\n              onChange: e => setInputId(e.target.value),\n              className: \"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleGenerateWithId,\n            className: \"bg-indigo-500 hover:bg-indigo-700 text-white font-bold py-2 px-4 rounded\",\n            children: \"Generate with ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-gray-400\",\n        children: [\"Current Problem ID: \", problemId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded-lg shadow-md p-6 mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"font-bold mb-2\",\n        children: \"Problem\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: problem.problem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mt-2 text-sm text-gray-600\",\n        children: problem.isEasyProblem ? \"This is an easy (fraction-based) problem.\" : \"This is a challenging (decimal-based) problem.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"inline-flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: showHelp,\n          onChange: toggleHelp,\n          className: \"form-checkbox h-5 w-5 text-blue-600\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"ml-2\",\n          children: \"Show Help\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"inline-flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: showAnswers,\n          onChange: toggleAnswers,\n          className: \"form-checkbox h-5 w-5 text-blue-600\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"ml-2\",\n          children: \"Show Answers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 7\n    }, this), showHelp && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow-md p-6 mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"font-bold mb-2\",\n          children: \"Given Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-disc pl-5\",\n          children: problem.givenInfo.map((info, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: problem.detailedInfoMap[info]\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow-md p-6 mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"font-bold mb-2\",\n          children: \"Equations to Use\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-disc pl-5\",\n          children: problem.equations.map((equation, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: equation\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), showAnswers && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow-md p-6 mt-6 mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"font-bold mb-2\",\n          children: \"Correct Answers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-disc pl-5\",\n          children: problem.problemType.unknowns.map((unknown, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: problem.answers[unknown]\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow-md p-6 mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"font-bold mb-2\",\n          children: \"Image Characteristics (SALT)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-disc pl-5\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Size: \", problem.salt.size]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Attitude: \", problem.salt.attitude]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Location: \", problem.salt.location]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Type: \", problem.salt.type]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 272,\n    columnNumber: 5\n  }, this);\n};\n_s(LensProblemGenerator, \"aQGysXPenhg595Au0QlNEJn/woE=\");\n_c = LensProblemGenerator;\nexport default LensProblemGenerator;\nvar _c;\n$RefreshReg$(_c, \"LensProblemGenerator\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","jsxDEV","_jsxDEV","Fragment","_Fragment","mulberry32","a","t","Math","imul","generateProblemType","rng","types","knowns","unknowns","floor","length","calculateSALT","lensType","focalLength","objectDistance","imageDistance","imageHeight","objectHeight","f","abs","do_","di","hi","ho","size","attitude","location","type","generateWordProblem","seed","objects","scenarios","objectChoice","scenario","replace","isEasyProblem","denominators","firstDenominator","secondDenominator","Number","toFixed","magnification","round","problemType","problemInfoMap","do","m","detailedInfoMap","unknownFullWords","formatUnknowns","lastUnknown","otherUnknowns","slice","map","u","join","problemDescription","remainingKnowns","objectIntroduced","addInfo","key","includes","filter","k","forEach","known","unknownsText","problem","givenInfo","equations","answers","salt","LensProblemGenerator","_s","setProblem","showHelp","setShowHelp","showAnswers","setShowAnswers","showControls","setShowControls","problemId","setProblemId","random","inputId","setInputId","handleGenerateProblem","handleRandomProblem","newId","toString","handleGenerateWithId","parseInt","isNaN","toggleHelp","toggleAnswers","toggleControls","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","htmlFor","id","value","onChange","e","target","checked","info","index","equation","unknown","_c","$RefreshReg$"],"sources":["C:/Users/harye/Downloads/Optics Problem Generator/lens-app/src/components/LensApp.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\n\r\n// Add a simple random number generator\r\nconst mulberry32 = (a) => {\r\n  return () => {\r\n    let t = a += 0x6D2B79F5;\r\n    t = Math.imul(t ^ (t >>> 15), t | 1);\r\n    t ^= t + Math.imul(t ^ (t >>> 7), t | 61);\r\n    return ((t ^ (t >>> 14)) >>> 0) / 4294967296;\r\n  };\r\n};\r\n\r\n// Add the missing functions\r\nconst generateProblemType = (rng) => {\r\n  const types = [\r\n    { knowns: ['do', 'ho', 'di'], unknowns: ['f', 'hi', 'm'] },\r\n    { knowns: ['f', 'do', 'ho'], unknowns: ['di', 'hi', 'm'] },\r\n    { knowns: ['f', 'do', 'hi'], unknowns: ['di', 'ho', 'm'] },\r\n    { knowns: ['f', 'di', 'ho'], unknowns: ['do', 'hi', 'm'] },\r\n    { knowns: ['di', 'ho', 'm'], unknowns: ['do', 'hi', 'f'] },\r\n    { knowns: ['do', 'hi', 'm'], unknowns: ['f', 'di', 'ho'] },\r\n  ];\r\n  return types[Math.floor(rng() * types.length)];\r\n};\r\n\r\nconst calculateSALT = (lensType, focalLength, objectDistance, imageDistance, imageHeight, objectHeight) => {\r\n  const f = Math.abs(focalLength);\r\n  const do_ = objectDistance;\r\n  const di = imageDistance;\r\n  const hi = imageHeight;\r\n  const ho = objectHeight;\r\n\r\n  let size, attitude, location, type;\r\n\r\n  // Size\r\n  size = Math.abs(hi) > Math.abs(ho) ? \"Larger\" : Math.abs(hi) < Math.abs(ho) ? \"Smaller\" : \"Same size\";\r\n\r\n  // Attitude\r\n  attitude = hi * ho > 0 ? \"Upright\" : \"Inverted\";\r\n\r\n  // Location and Type\r\n  if (lensType === \"converging\") {\r\n    if (do_ > 2*f) {\r\n      location = \"Between f and 2f\";\r\n      type = \"Real\";\r\n    } else if (do_ === 2*f) {\r\n      location = \"At 2f\";\r\n      type = \"Real\";\r\n    } else if (do_ < 2*f && do_ > f) {\r\n      location = \"Beyond 2f\";\r\n      type = \"Real\";\r\n    } else if (do_ === f) {\r\n      location = \"No image formed\";\r\n      type = \"No image\";\r\n    } else if (do_ < f) {\r\n      location = \"Same side as object\";\r\n      type = \"Virtual\";\r\n    }\r\n  } else { // diverging lens\r\n    location = \"Same side as object\";\r\n    type = \"Virtual\";\r\n  }\r\n\r\n  return { size, attitude, location, type };\r\n};\r\n\r\nconst generateWordProblem = (seed) => {\r\n  const rng = mulberry32(seed);\r\n\r\n  const objects = [\"pencil\", \"flower\", \"toy car\", \"book\", \"candle\", \"tin can\", \"statue\"];\r\n  const scenarios = [\r\n    \"In a physics lab, students are experimenting with a {lens_type} lens.\",\r\n    \"An optometrist is demonstrating how a {lens_type} lens works in correcting vision.\",\r\n    \"A photographer is using a {lens_type} lens to capture a unique perspective.\",\r\n    \"At a science museum, visitors can interact with a large {lens_type} lens exhibit.\",\r\n    \"During an optics lecture, a professor is explaining the properties of a {lens_type} lens.\",\r\n    \"A jeweler is using a small {lens_type} lens to inspect the details of a gemstone.\",\r\n    \"In a telescope, a {lens_type} lens is used to magnify distant objects.\",\r\n    \"A student is learning about image formation using a {lens_type} lens in their physics class.\",\r\n    \"At an optician's shop, different {lens_type} lenses are being demonstrated to a customer.\",\r\n    \"In a microscope, a {lens_type} lens is used to magnify tiny specimens.\",\r\n    \"A projector uses a {lens_type} lens to display images on a screen.\",\r\n    \"In a camera, a {lens_type} lens is focusing light onto the image sensor.\",\r\n    \"An artist is using a {lens_type} lens to create distorted images for a unique art piece.\",\r\n    \"In a virtual reality headset, {lens_type} lenses are used to focus the display for the user's eyes.\"\r\n  ];\r\n\r\n  const lensType = rng() < 0.5 ? \"converging\" : \"diverging\";\r\n  const objectChoice = objects[Math.floor(rng() * objects.length)];\r\n  const scenario = scenarios[Math.floor(rng() * scenarios.length)].replace(\"{lens_type}\", lensType);\r\n\r\n  const isEasyProblem = rng() < 0.5;\r\n\r\n  let focalLength, objectDistance;\r\n\r\n  if (isEasyProblem) {\r\n    const denominators = [2, 3, 4, 5, 6, 8, 10, 12];\r\n    const firstDenominator = denominators[Math.floor(rng() * denominators.length)];\r\n    const secondDenominator = denominators[Math.floor(rng() * denominators.length)];\r\n    focalLength = lensType === \"diverging\" ? -firstDenominator : firstDenominator;\r\n    objectDistance = secondDenominator;\r\n  } else {\r\n    focalLength = lensType === \"diverging\" ? -(rng() * 45 + 5) : (rng() * 45 + 5);\r\n    objectDistance = rng() * 90 + 10;\r\n    focalLength = Number(focalLength.toFixed(2));\r\n    objectDistance = Number(objectDistance.toFixed(2));\r\n  }\r\n\r\n  // Perform calculations with full precision\r\n  const imageDistance = 1 / (1 / focalLength - 1 / objectDistance);\r\n  const magnification = -imageDistance / objectDistance;\r\n  const objectHeight = Math.round(rng() * 9 + 1);\r\n  const imageHeight = objectHeight * magnification;\r\n\r\n  const problemType = generateProblemType(rng);\r\n\r\n  const problemInfoMap = {\r\n    lensType: `The lens is a ${lensType} lens.`,\r\n    f: `The focal length of the lens is ${Math.abs(focalLength)} cm.`,\r\n    do: `A ${objectChoice} is placed ${objectDistance} cm in front of the lens.`,\r\n    ho: `The ${objectChoice} is ${objectHeight} cm tall.`,\r\n    di: `An image is formed ${Math.abs(imageDistance.toFixed(2))} cm ${imageDistance > 0 ? 'behind' : 'in front of'} the lens.`,\r\n    hi: `The image is ${Math.abs(imageHeight.toFixed(2))} cm tall${imageHeight < 0 ? ' and inverted' : ''}.`,\r\n    m: `The magnification of the lens is ${Math.abs(magnification.toFixed(2))}${magnification < 0 ? ' (inverted)' : ''}.`\r\n  };\r\n\r\n  const detailedInfoMap = {\r\n    lensType: `Lens type: ${lensType}`,\r\n    do: `do = ${objectDistance} cm`,\r\n    f: `f = ${focalLength} cm`,\r\n    ho: `ho = ${objectHeight} cm`,\r\n    di: `di = ${imageDistance.toFixed(2)} cm`,\r\n    hi: `hi = ${imageHeight.toFixed(2)} cm`,\r\n    m: `m = ${magnification.toFixed(2)}`\r\n  };\r\n\r\n  const unknownFullWords = {\r\n    do: \"distance of object\",\r\n    f: \"focal length\",\r\n    ho: \"height of object\",\r\n    di: \"distance of image\",\r\n    hi: \"height of image\",\r\n    m: \"magnification\"\r\n  };\r\n\r\n  const formatUnknowns = (unknowns) => {\r\n    if (unknowns.length === 1) {\r\n      return unknownFullWords[unknowns[0]];\r\n    } else if (unknowns.length === 2) {\r\n      return `${unknownFullWords[unknowns[0]]} and ${unknownFullWords[unknowns[1]]}`;\r\n    } else {\r\n      const lastUnknown = unknownFullWords[unknowns[unknowns.length - 1]];\r\n      const otherUnknowns = unknowns.slice(0, -1).map(u => unknownFullWords[u]).join(\", \");\r\n      return `${otherUnknowns}, and ${lastUnknown}`;\r\n    }\r\n  };\r\n\r\n  let problemDescription = '';\r\n  let remainingKnowns = [...problemType.knowns];\r\n  let objectIntroduced = false;\r\n\r\n  // Function to add info to the problem description and remove from remainingKnowns\r\n  const addInfo = (key) => {\r\n    if (remainingKnowns.includes(key)) {\r\n      if (key === 'do') objectIntroduced = true;\r\n      problemDescription += problemInfoMap[key] + ' ';\r\n      remainingKnowns = remainingKnowns.filter(k => k !== key);\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  // Add scenario first\r\n  problemDescription = `${scenario} `;\r\n\r\n  // Add 'f' if it's present\r\n  addInfo('f');\r\n\r\n  // Add 'do' next, either after 'f' or first if 'f' is not present\r\n  addInfo('do');\r\n\r\n  // If object hasn't been introduced and we're about to mention its height, introduce it\r\n  if (!objectIntroduced && remainingKnowns.includes('ho')) {\r\n    problemDescription += `A ${objectChoice} is placed in front of the lens. `;\r\n    objectIntroduced = true;\r\n  }\r\n  addInfo('ho');\r\n  // Add the rest of the knowns\r\n  remainingKnowns.forEach(known => {\r\n    if (known !== 'lensType') {  // lensType is already included in the scenario\r\n      problemDescription += problemInfoMap[known] + ' ';\r\n    }\r\n  });\r\n\r\n  // If the object still hasn't been introduced, add it at the end\r\n  if (!objectIntroduced) {\r\n    problemDescription += `A ${objectChoice} is placed in front of the lens. `;\r\n  }\r\n\r\n  const unknownsText = formatUnknowns(problemType.unknowns);\r\n  const problem = `${problemDescription}Determine the ${unknownsText} for this lens system.`;\r\n\r\n  const givenInfo = ['lensType', ...problemType.knowns];\r\n\r\n  const equations = [\r\n    \"1. Thin Lens equation: 1/f = 1/di + 1/do\",\r\n    \"2. Magnification equation: m = hi/ho = -di/do\"\r\n  ];\r\n\r\n  const answers = {\r\n    f: `Focal length (f): ${focalLength.toFixed(2)} cm`,\r\n    do: `Object distance (do): ${objectDistance.toFixed(2)} cm`,\r\n    ho: `Object height (ho): ${objectHeight.toFixed(2)} cm`,\r\n    di: `Image distance (di): ${imageDistance.toFixed(2)} cm`,\r\n    hi: `Image height (hi): ${imageHeight.toFixed(2)} cm`,\r\n    m: `Magnification (m): ${magnification.toFixed(2)}`\r\n  };\r\n\r\n  const salt = calculateSALT(lensType, focalLength, objectDistance, imageDistance, imageHeight, objectHeight);\r\n\r\n  return { \r\n    problem, \r\n    givenInfo, \r\n    problemInfoMap,\r\n    detailedInfoMap, \r\n    equations, \r\n    problemType, \r\n    answers, \r\n    salt,\r\n    isEasyProblem\r\n  };\r\n};\r\n\r\nconst LensProblemGenerator = () => {\r\n  const [problem, setProblem] = useState(null);\r\n  const [showHelp, setShowHelp] = useState(false);\r\n  const [showAnswers, setShowAnswers] = useState(false);\r\n  const [showControls, setShowControls] = useState(false);\r\n  const [problemId, setProblemId] = useState(Math.floor(Math.random() * 1000000));\r\n  const [inputId, setInputId] = useState('');\r\n\r\n  const handleGenerateProblem = useCallback(() => {\r\n    setProblem(generateWordProblem(problemId));\r\n    setShowHelp(false);\r\n    setShowAnswers(false);\r\n  }, [problemId]);\r\n\r\n  useEffect(() => {\r\n    handleGenerateProblem();\r\n  }, [handleGenerateProblem]);\r\n\r\n  const handleRandomProblem = () => {\r\n    const newId = Math.floor(Math.random() * 1000000);\r\n    setProblemId(newId);\r\n    setInputId(newId.toString());\r\n  };\r\n\r\n  const handleGenerateWithId = () => {\r\n    const newId = parseInt(inputId);\r\n    if (!isNaN(newId)) {\r\n      setProblemId(newId);\r\n    }\r\n  };\r\n\r\n  const toggleHelp = () => setShowHelp(!showHelp);\r\n  const toggleAnswers = () => setShowAnswers(!showAnswers);\r\n  const toggleControls = () => setShowControls(!showControls);\r\n\r\n  if (!problem) return <div>Loading...</div>;\r\n\r\n  return (\r\n    <div className=\"p-8 max-w-3xl mx-auto bg-gray-50 min-h-screen\">\r\n      <h1 className=\"text-2xl font-bold mb-6\">Lens Calculation Questions Practice</h1>\r\n      \r\n      <div className=\"bg-white rounded-lg shadow-md p-6 mb-6 relative\">\r\n        <button\r\n          onClick={toggleControls}\r\n          className=\"absolute top-2 right-2 text-blue-500 hover:text-blue-700\"\r\n        >\r\n          {showControls ? 'Hide Controls' : 'Show Controls'}\r\n        </button>\r\n        {showControls && (\r\n          <div className=\"mt-4\">\r\n            <div className=\"flex items-center space-x-4 mb-4\">\r\n              <div>\r\n                <label htmlFor=\"problemId\" className=\"block text-sm font-medium text-gray-700\">Problem ID</label>\r\n                <input\r\n                  type=\"number\"\r\n                  id=\"problemId\"\r\n                  value={inputId}\r\n                  onChange={(e) => setInputId(e.target.value)}\r\n                  className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\"\r\n                />\r\n              </div>\r\n              <button \r\n                onClick={handleGenerateWithId}\r\n                className=\"bg-indigo-500 hover:bg-indigo-700 text-white font-bold py-2 px-4 rounded\"\r\n              >\r\n                Generate with ID\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n        <p className=\"text-sm text-gray-400\">Current Problem ID: {problemId}</p>\r\n      </div>\r\n\r\n      <div className=\"bg-white rounded-lg shadow-md p-6 mb-6\">\r\n        <h2 className=\"font-bold mb-2\">Problem</h2>\r\n        <p>{problem.problem}</p>\r\n        <p className=\"mt-2 text-sm text-gray-600\">\r\n          {problem.isEasyProblem ? \"This is an easy (fraction-based) problem.\" : \"This is a challenging (decimal-based) problem.\"}\r\n        </p>\r\n      </div>\r\n      \r\n      <div className=\"flex justify-between mb-6\">\r\n        <label className=\"inline-flex items-center\">\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={showHelp}\r\n            onChange={toggleHelp}\r\n            className=\"form-checkbox h-5 w-5 text-blue-600\"\r\n          />\r\n          <span className=\"ml-2\">Show Help</span>\r\n        </label>\r\n        <label className=\"inline-flex items-center\">\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={showAnswers}\r\n            onChange={toggleAnswers}\r\n            className=\"form-checkbox h-5 w-5 text-blue-600\"\r\n          />\r\n          <span className=\"ml-2\">Show Answers</span>\r\n        </label>\r\n      </div>\r\n\r\n      {showHelp && (\r\n        <>\r\n          <div className=\"bg-white rounded-lg shadow-md p-6 mb-6\">\r\n            <h2 className=\"font-bold mb-2\">Given Information</h2>\r\n            <ul className=\"list-disc pl-5\">\r\n              {problem.givenInfo.map((info, index) => (\r\n                <li key={index}>\r\n                  {problem.detailedInfoMap[info]}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n          <div className=\"bg-white rounded-lg shadow-md p-6 mb-6\">\r\n            <h2 className=\"font-bold mb-2\">Equations to Use</h2>\r\n            <ul className=\"list-disc pl-5\">\r\n              {problem.equations.map((equation, index) => (\r\n                <li key={index}>{equation}</li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        </>\r\n      )}\r\n\r\n      {showAnswers && (\r\n        <>\r\n          <div className=\"bg-white rounded-lg shadow-md p-6 mt-6 mb-6\">\r\n            <h2 className=\"font-bold mb-2\">Correct Answers</h2>\r\n            <ul className=\"list-disc pl-5\">\r\n              {problem.problemType.unknowns.map((unknown, index) => (\r\n                <li key={index}>{problem.answers[unknown]}</li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n          <div className=\"bg-white rounded-lg shadow-md p-6 mb-6\">\r\n            <h2 className=\"font-bold mb-2\">Image Characteristics (SALT)</h2>\r\n            <ul className=\"list-disc pl-5\">\r\n              <li>Size: {problem.salt.size}</li>\r\n              <li>Attitude: {problem.salt.attitude}</li>\r\n              <li>Location: {problem.salt.location}</li>\r\n              <li>Type: {problem.salt.type}</li>\r\n            </ul>\r\n          </div>\r\n        </>\r\n      )}\r\n      \r\n    </div>\r\n  );\r\n\r\n\r\n};\r\n\r\nexport default LensProblemGenerator;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}